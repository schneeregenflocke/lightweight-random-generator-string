name: CMake Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  Qt6_ROOT: ${{ github.workspace }}/Qt/6.9.1/msvc2022_64

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
      - name: Print environment details
        run: |
          echo "Workspace: ${{ github.workspace }}"
          echo "Qt6_ROOT: ${{ env.Qt6_ROOT }}"

      - uses: actions/checkout@v4

      - name: Install Qt
        working-directory: ${{ github.workspace }}
        run: |
          cd
          dir
          curl -L -O https://download.qt.io/official_releases/online_installers/qt-online-installer-windows-x64-online.exe
          qt-online-installer-windows-x64-online.exe --root ${{ github.workspace }}/Qt --accept-licenses --accept-obligations --default-answer --confirm-command install qt6.9.1-msvc2022-full-dbg

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        # cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DQT_INSTALLATION_PREFIX=${{ github.workspace }}/Qt/6.1.2/msvc2019_64 -DCPACK_IFW_ROOT=${{github.workspace}}/Qt/Tools/QtInstallerFramework/4.4

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      - name: Prepare Directory
        run: mkdir package

    #  - name: CPack
    #    working-directory: package
    #    run: |
    #      #dir ..\build
    #      cpack --config ../build/CPackConfig.cmake -V

    #- name: Upload Artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: installer
    #    path: package/*.exe
